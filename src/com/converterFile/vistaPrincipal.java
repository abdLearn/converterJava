/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.converterEjemplo;

import java.awt.Color;
import java.util.HashMap;
import javax.swing.ImageIcon;

/**
 *
 * @author adbiel valdivia
 */
public class vistaPrincipal extends javax.swing.JFrame {

    //Mover desde el navbar
    int xmouse, ymouse;
    
    //Para los iconos en el comboBox
    HashMap<Object, ImageIcon> elementosMoneda;
    HashMap<Object, ImageIcon> elementosTemperatura;
    
    
    //Para convertir "de" a "en" InicializandoVariables
    String buscarInicioMoneda = "PEN";
    String buscarDestinoMoneda = "PEN";
    String buscarInicioTemperatura = "Celcius";
    String buscarDestinoTemperatura = "Celcius";
    
    
    //Para el fondo del panel
    FondoPanel panel = new FondoPanel();
    public vistaPrincipal() {
        this.setContentPane(panel);
        initComponents();
        
        elementosMoneda = new HashMap<>();
        elementosTemperatura = new HashMap<>();
        
        initComboMoneda();
        initComboTemperatura();
    }
   
    private void initComboMoneda() {
        ComunicarJson json = new ComunicarJson("Monedas");
        for(Conversion item : json.getJsonList()){
            MonedaActual.addItem(item.getNombre());
            MonedaDestino.addItem(item.getNombre());
            elementosMoneda.put(item.getNombre(), getIcon(item.getRutaImage()));
        }
        ComboBoxCustom cbc = new ComboBoxCustom(elementosMoneda);
        MonedaActual.setRenderer(cbc);
        MonedaDestino.setRenderer(cbc);
    }

    public ImageIcon getIcon(String path){
        int w = 30, h = 30;
        return new ImageIcon(new ImageIcon(getClass().getResource(path)).getImage().getScaledInstance(w, h, java.awt.Image.SCALE_SMOOTH));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg_main = new javax.swing.JPanel();
        navbar = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cont_exit = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        container = new FondoPanel();
        ImporteMoneda = new javax.swing.JTextField();
        ImpresionImporte = new javax.swing.JLabel();
        MonedaActual = new javax.swing.JComboBox<>();
        MonedaDestino = new javax.swing.JComboBox<>();
        ResultadoText = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        ContainerTemperatura = new javax.swing.JPanel();
        ImporteTemperatura = new javax.swing.JTextField();
        TemperaturaActual = new javax.swing.JComboBox<>();
        TemperaturaDestino = new javax.swing.JComboBox<>();
        ResultadoTemperatura = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);
        setResizable(false);

        bg_main.setBackground(new java.awt.Color(255, 255, 255));
        bg_main.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        navbar.setBackground(new java.awt.Color(255, 255, 255));
        navbar.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 102, 153)));
        navbar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                navbarMouseDragged(evt);
            }
        });
        navbar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                navbarMousePressed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("CONVERSOR");

        cont_exit.setBackground(new java.awt.Color(255, 255, 255));
        cont_exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cont_exitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cont_exitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cont_exitMouseExited(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("X");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel2.setPreferredSize(new java.awt.Dimension(40, 40));

        javax.swing.GroupLayout cont_exitLayout = new javax.swing.GroupLayout(cont_exit);
        cont_exit.setLayout(cont_exitLayout);
        cont_exitLayout.setHorizontalGroup(
            cont_exitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cont_exitLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        cont_exitLayout.setVerticalGroup(
            cont_exitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cont_exitLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout navbarLayout = new javax.swing.GroupLayout(navbar);
        navbar.setLayout(navbarLayout);
        navbarLayout.setHorizontalGroup(
            navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navbarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 645, Short.MAX_VALUE)
                .addComponent(cont_exit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        navbarLayout.setVerticalGroup(
            navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navbarLayout.createSequentialGroup()
                .addGroup(navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(navbarLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cont_exit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(navbarLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        bg_main.add(navbar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 890, 70));

        jTabbedPane1.setBackground(new java.awt.Color(51, 51, 51));
        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane1.setFont(new java.awt.Font("Arial Narrow", 1, 24)); // NOI18N
        jTabbedPane1.setOpaque(true);

        container.setBackground(new java.awt.Color(255, 255, 255));

        ImporteMoneda.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        ImporteMoneda.setText("1");
        ImporteMoneda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ImporteMonedaKeyReleased(evt);
            }
        });

        ImpresionImporte.setBackground(new java.awt.Color(255, 255, 255));
        ImpresionImporte.setFont(new java.awt.Font("Arial Black", 1, 30)); // NOI18N
        ImpresionImporte.setForeground(new java.awt.Color(0, 102, 51));
        ImpresionImporte.setText("Importe");

        MonedaActual.setBackground(new java.awt.Color(51, 255, 51));
        MonedaActual.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        MonedaActual.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        MonedaActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonedaActualActionPerformed(evt);
            }
        });

        MonedaDestino.setBackground(new java.awt.Color(51, 255, 51));
        MonedaDestino.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        MonedaDestino.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        MonedaDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonedaDestinoActionPerformed(evt);
            }
        });

        ResultadoText.setFont(new java.awt.Font("Arial Black", 1, 30)); // NOI18N
        ResultadoText.setForeground(new java.awt.Color(0, 102, 51));
        ResultadoText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ResultadoText.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 204)));
        ResultadoText.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout containerLayout = new javax.swing.GroupLayout(container);
        container.setLayout(containerLayout);
        containerLayout.setHorizontalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(ImpresionImporte)
                        .addComponent(ImporteMoneda)
                        .addComponent(MonedaActual, 0, 382, Short.MAX_VALUE)
                        .addComponent(MonedaDestino, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(ResultadoText, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        containerLayout.setVerticalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(ImpresionImporte)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ImporteMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(MonedaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(MonedaDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(ResultadoText, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        jTabbedPane1.addTab("Conversor Monedas", container);

        ContainerTemperatura.setBackground(new java.awt.Color(255, 255, 255));

        ImporteTemperatura.setFont(new java.awt.Font("Arial Narrow", 1, 24)); // NOI18N
        ImporteTemperatura.setText("0");
        ImporteTemperatura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ImporteTemperaturaKeyReleased(evt);
            }
        });

        TemperaturaActual.setFont(new java.awt.Font("Arial Narrow", 1, 24)); // NOI18N
        TemperaturaActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TemperaturaActualActionPerformed(evt);
            }
        });

        TemperaturaDestino.setFont(new java.awt.Font("Arial Narrow", 1, 24)); // NOI18N
        TemperaturaDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TemperaturaDestinoActionPerformed(evt);
            }
        });

        ResultadoTemperatura.setFont(new java.awt.Font("Arial Narrow", 1, 24)); // NOI18N
        ResultadoTemperatura.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ResultadoTemperatura.setText("1");
        ResultadoTemperatura.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 51, 255)));
        ResultadoTemperatura.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel4.setFont(new java.awt.Font("Arial Narrow", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Valor");

        javax.swing.GroupLayout ContainerTemperaturaLayout = new javax.swing.GroupLayout(ContainerTemperatura);
        ContainerTemperatura.setLayout(ContainerTemperaturaLayout);
        ContainerTemperaturaLayout.setHorizontalGroup(
            ContainerTemperaturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerTemperaturaLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(ContainerTemperaturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ResultadoTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ContainerTemperaturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(TemperaturaDestino, javax.swing.GroupLayout.Alignment.LEADING, 0, 370, Short.MAX_VALUE)
                        .addComponent(TemperaturaActual, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ImporteTemperatura, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        ContainerTemperaturaLayout.setVerticalGroup(
            ContainerTemperaturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerTemperaturaLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ImporteTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(TemperaturaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TemperaturaDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(ResultadoTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ContainerTemperatura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ContainerTemperatura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Convesor Temperatura", jPanel1);

        bg_main.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 890, 490));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(bg_main, javax.swing.GroupLayout.PREFERRED_SIZE, 888, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg_main, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void navbarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_navbarMousePressed
        // TODO add your handling code here:
        xmouse = evt.getX();
        ymouse = evt.getY();
    }//GEN-LAST:event_navbarMousePressed

    private void navbarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_navbarMouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xmouse,y - ymouse);
    }//GEN-LAST:event_navbarMouseDragged

    private void cont_exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cont_exitMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_cont_exitMouseClicked

    private void cont_exitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cont_exitMouseEntered
        // TODO add your handling code here:
        cont_exit.setBackground(Color.red);
    }//GEN-LAST:event_cont_exitMouseEntered

    private void cont_exitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cont_exitMouseExited
        // TODO add your handling code here:
        cont_exit.setBackground(Color.white);
    }//GEN-LAST:event_cont_exitMouseExited

    private void MonedaActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonedaActualActionPerformed
        buscarInicioMoneda = MonedaActual.getSelectedItem().toString();
        ConversorMoneda();
    }//GEN-LAST:event_MonedaActualActionPerformed

    private void MonedaDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonedaDestinoActionPerformed
        buscarDestinoMoneda = MonedaDestino.getSelectedItem().toString();
        ConversorMoneda();
    }//GEN-LAST:event_MonedaDestinoActionPerformed

    public void ConversorMoneda(){
        TipoCambio cambio = new TipoCambio(buscarInicioMoneda, buscarDestinoMoneda);
        try {
            double cantidad = Double.parseDouble(ImporteMoneda.getText());
            double conversion = cambio.getCambioDivisa()*cantidad;
            ResultadoText.setText(cantidad+" "+buscarInicioMoneda+" = "+String.valueOf(Redondeo(conversion))+" "+buscarDestinoMoneda);
        } catch (NullPointerException e) {
            ResultadoText.setText("Error: valor vacio");
            System.err.println(e.toString());
        } catch (NumberFormatException e){
            ResultadoText.setText("Error: ingrese un número válido");
            System.err.println(e.toString());
        }
    }
    
    public double Redondeo(double x){
        return Math.round(x*100.0)/100.0;
    }
    
    
    private void ImporteMonedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ImporteMonedaKeyReleased
        ConversorMoneda();
    }//GEN-LAST:event_ImporteMonedaKeyReleased

    //para el conversion de Temperatura
    private void ImporteTemperaturaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ImporteTemperaturaKeyReleased
        // TODO add your handling code here:
        ConversorTemperatura();
    }//GEN-LAST:event_ImporteTemperaturaKeyReleased

    private void TemperaturaActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TemperaturaActualActionPerformed
        // TODO add your handling code here:
        buscarInicioTemperatura = TemperaturaActual.getSelectedItem().toString();
        ConversorTemperatura();
    }//GEN-LAST:event_TemperaturaActualActionPerformed

    private void TemperaturaDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TemperaturaDestinoActionPerformed
        // TODO add your handling code here:
        buscarDestinoTemperatura = TemperaturaDestino.getSelectedItem().toString();
        ConversorTemperatura();
    }//GEN-LAST:event_TemperaturaDestinoActionPerformed

    private void ConversorTemperatura() {
        TipoCambio cambio = new TipoCambio(buscarInicioTemperatura, buscarDestinoTemperatura);
        try {
            double cantidad = Double.parseDouble(ImporteTemperatura.getText());
            double conversion = cambio.getCambioTemperatura(cantidad);
            ResultadoTemperatura.setText(cantidad+" "+cambio.getSimboloTemperatura(buscarInicioTemperatura)+" = "+String.valueOf(Redondeo(conversion))+" "+cambio.getSimboloTemperatura(buscarDestinoTemperatura));
        } catch (NullPointerException e) {
            ResultadoTemperatura.setText("Error: valor vacio");
            System.err.println(e.toString());
        } catch (NumberFormatException e){
            ResultadoTemperatura.setText("Error: ingrese un número válido");
            System.err.println(e.toString());
        }
    }
    
     private void initComboTemperatura() {
        ComunicarJson json = new ComunicarJson("Temperatura");
        for(Conversion item : json.getJsonList()){
            TemperaturaActual.addItem(item.getNombre());
            TemperaturaDestino.addItem(item.getNombre());
            elementosTemperatura.put(item.getNombre(), getIcon(item.getRutaImage()));
        }
        ComboBoxCustom cbc = new ComboBoxCustom(elementosTemperatura);
        TemperaturaActual.setRenderer(cbc);
        TemperaturaDestino.setRenderer(cbc);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vistaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vistaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vistaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vistaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new vistaPrincipal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ContainerTemperatura;
    private javax.swing.JTextField ImporteMoneda;
    private javax.swing.JTextField ImporteTemperatura;
    private javax.swing.JLabel ImpresionImporte;
    private javax.swing.JComboBox<String> MonedaActual;
    private javax.swing.JComboBox<String> MonedaDestino;
    private javax.swing.JLabel ResultadoTemperatura;
    private javax.swing.JLabel ResultadoText;
    private javax.swing.JComboBox<String> TemperaturaActual;
    private javax.swing.JComboBox<String> TemperaturaDestino;
    private javax.swing.JPanel bg_main;
    private javax.swing.JPanel cont_exit;
    private javax.swing.JPanel container;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel navbar;
    // End of variables declaration//GEN-END:variables

   

    

   
}
